{"version":3,"sources":["components/styles/Movie.style.js","components/Movie.js","components/styles/MovieList.style.js","components/styles/Navbar.style.js","components/GlobalStyles.style.js","components/styles/AppContainer.style.js","App.js","index.js"],"names":["SingleMovie","styled","div","MovieImage","img","ReleaseInfo","Details","actors","awards","plot","score","boxoffice","Movie","title","poster","year","useState","view","setView","details","setDetails","useEffect","a","fetch","res","json","data","Actors","Awards","Plot","Metascore","BoxOffice","fetchMovie","A","src","alt","onClick","MovieList","Navbar","nav","GlobalStyles","createGlobalStyle","AppContainer","App","input","setInput","query","setQuery","results","setResults","films","Search","console","log","onSubmit","e","preventDefault","formSubmit","type","value","onChange","target","style","marginLeft","map","result","index","Title","Year","Poster","ReactDOM","render","document","getElementById"],"mappings":"6NAEaA,EAAcC,IAAOC,IAAV,mVAiBXC,EAAaF,IAAOG,IAAV,iMAUVC,EAAcJ,IAAOC,IAAV,oM,OCzBxB,SAASI,EAAT,GAA8D,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UAC9C,OACE,eAACX,EAAD,WACE,8BAAMS,IACN,2CAAcF,KACd,2CAAcC,KACd,8CAAiBE,KACjB,+CAAkBC,QAKT,SAASC,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAC7C,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAlBAC,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACoBC,MAAM,6CAAD,OACwBV,IAFjD,cACQW,EADR,gBAIqBA,EAAIC,OAJzB,OAIQC,EAJR,OAKMP,EAAU,CACZZ,OAAQmB,EAAKC,OACbnB,OAAQkB,EAAKE,OACbnB,KAAMiB,EAAKG,KACXnB,MAAOgB,EAAKI,UACZnB,UAAWe,EAAKK,WAElBX,EAAWD,GAZb,4CADc,uBAAC,WAAD,wBAeda,KACC,CAACnB,IAGF,eAACb,EAAD,WACE,eAACK,EAAD,WACE,8BAAMQ,IACN,+BAAOE,OAEPE,EAGA,cAACX,EAAD,CACEC,OAAQY,EAAQZ,OAChBE,KAAMU,EAAQV,KACdD,OAAQW,EAAQX,OAChBE,MAAOS,EAAQT,MACfC,UAAWQ,EAAQR,UACnBsB,GAAC,IARH,cAAC9B,EAAD,CAAY+B,IAAKpB,EAAQqB,IAAI,cAW/B,wBAAQC,QAAS,kBAAMlB,GAASD,IAAhC,6BCrDC,I,MAAMoB,EAAYpC,IAAOC,IAAV,8UCAToC,EAASrC,IAAOsC,IAAV,4gBCANC,EAAeC,YAAH,yECAZC,EAAezC,IAAOC,IAAV,kI,MC6DVyC,MAvDf,WACE,MAA0B3B,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcC,EAAd,KACA,EAA0B7B,mBAAS,IAAnC,mBAAO8B,EAAP,KAAcC,EAAd,KACA,EAA8B/B,mBAAS,IAAvC,mBAAOgC,EAAP,KAAgBC,EAAhB,KAoBA,OAlBA5B,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACoBC,MAAM,8CAAD,OACyBuB,IAFlD,cACQtB,EADR,gBAIqBA,EAAIC,OAJzB,OAIQC,EAJR,OAKQwB,EAAQxB,EAAKyB,OACnBF,EAAWC,GACXA,GAASE,QAAQC,IAAIH,GAPvB,4CADc,uBAAC,WAAD,wBAUdlB,KACC,CAACc,IAQF,eAACJ,EAAD,WACE,cAACF,EAAD,IACA,eAACF,EAAD,WACE,kDACA,uBAAMgB,SAAU,SAACC,GAAD,OAVH,SAACA,GAClBA,EAAEC,iBACFT,EAASH,GACTC,EAAS,IAOkBY,CAAWF,IAAlC,UACE,uBACEG,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAACL,GAAD,OAAOV,EAASU,EAAEM,OAAOF,UAErC,wBAAQD,KAAK,SAAb,yBAGFZ,GACA,oBAAIgB,MAAO,CAAEC,WAAY,OAAzB,2CAEF,cAAC1B,EAAD,UACGW,GACCA,EAAQgB,KAAI,SAACC,EAAQC,GAAT,OACV,cAACtD,EAAD,CAEEC,MAAOoD,EAAOE,MACdpD,KAAMkD,EAAOG,KACbtD,OAAQmD,EAAOI,QAHVH,YChDnBI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ff1ac875.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const SingleMovie = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  button {\r\n    margin: 1rem 0;\r\n    padding: 0.5rem;\r\n    border: 3px solid #00b4cc;\r\n    background-color: #00b4cc;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nexport const MovieImage = styled.img`\r\n  /* height: 40vh;\r\n  max-width: 30vh; */\r\n  max-width: 12rem;\r\n  background-size: cover;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n  transition: all 2s ease;\r\n`;\r\n\r\nexport const ReleaseInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 1.3rem;\r\n  font-weight: 600;\r\n  color: #3c403d;\r\n  span {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SingleMovie, MovieImage, ReleaseInfo } from \"./styles/Movie.style\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Details({ actors, awards, plot, score, boxoffice }) {\r\n  return (\r\n    <SingleMovie>\r\n      <div>{plot}</div>\r\n      <div>Actors: {actors}</div>\r\n      <div>Awards: {awards}</div>\r\n      <div>Metascore: {score}</div>\r\n      <div>Box Office: {boxoffice}</div>\r\n    </SingleMovie>\r\n  );\r\n}\r\n\r\nexport default function Movie({ title, poster, year }) {\r\n  const [view, setView] = useState(false);\r\n  const [details, setDetails] = useState({});\r\n  useEffect(() => {\r\n    async function fetchMovie() {\r\n      const res = await fetch(\r\n        `http://www.omdbapi.com/?apikey=f08e8f89&t=${title}`\r\n      );\r\n      const data = await res.json();\r\n      let details = {\r\n        actors: data.Actors,\r\n        awards: data.Awards,\r\n        plot: data.Plot,\r\n        score: data.Metascore,\r\n        boxoffice: data.BoxOffice,\r\n      };\r\n      setDetails(details);\r\n    }\r\n    fetchMovie();\r\n  }, [title]);\r\n\r\n  return (\r\n    <SingleMovie>\r\n      <ReleaseInfo>\r\n        <div>{title}</div>\r\n        <span>{year}</span>\r\n      </ReleaseInfo>\r\n      {!view ? (\r\n        <MovieImage src={poster} alt=\"image n/a\"></MovieImage>\r\n      ) : (\r\n        <Details\r\n          actors={details.actors}\r\n          plot={details.plot}\r\n          awards={details.awards}\r\n          score={details.score}\r\n          boxoffice={details.boxoffice}\r\n          A\r\n        />\r\n      )}\r\n      <button onClick={() => setView(!view)}>View details</button>\r\n    </SingleMovie>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const MovieList = styled.div`\r\n  transition: ease all 0.5s;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-row-gap: 10vh;\r\n  padding: 5rem 0.5rem;\r\n\r\n  @media only screen and (min-width: 900px) {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-row-gap: 2rem;\r\n    padding: 5rem 3rem;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Navbar = styled.nav`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  height: 10vh;\r\n  align-items: center;\r\n  color: white;\r\n  background-color: #004e7c;\r\n  div {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n  }\r\n  input {\r\n    border: 3px solid #00b4cc;\r\n    border-right: none;\r\n    padding: 0.5rem;\r\n    border-radius: 5px 0 0 5px;\r\n    outline: none;\r\n  }\r\n  button {\r\n    padding: 0.5rem;\r\n    border: 3px solid #00b4cc;\r\n    background-color: #00b4cc;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\tbody{\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppContainer = styled.div`\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  background-color: #dce1e3;\r\n  font-family: \"Trocchi\", serif;\r\n`;\r\n","import { useEffect, useState } from \"react\";\nimport Movie from \"./components/Movie.js\";\nimport { MovieList } from \"./components/styles/MovieList.style\";\nimport { Navbar } from \"./components/styles/Navbar.style\";\nimport { GlobalStyles } from \"./components/GlobalStyles.style\";\nimport { AppContainer } from \"./components/styles/AppContainer.style\";\nimport \"./App.css\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const res = await fetch(\n        `https://www.omdbapi.com/?apikey=f08e8f89&s=${query}`\n      );\n      const data = await res.json();\n      const films = data.Search;\n      setResults(films);\n      films && console.log(films);\n    }\n    fetchMovie();\n  }, [query]);\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    setQuery(input);\n    setInput(\"\");\n  };\n  return (\n    <AppContainer>\n      <GlobalStyles />\n      <Navbar>\n        <div>Movies/TV Shows</div>\n        <form onSubmit={(e) => formSubmit(e)}>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n          <button type=\"submit\">Find</button>\n        </form>\n      </Navbar>\n      {!query && (\n        <h2 style={{ marginLeft: \"35%\" }}>Search for Movies or TV shows</h2>\n      )}\n      <MovieList>\n        {results &&\n          results.map((result, index) => (\n            <Movie\n              key={index}\n              title={result.Title}\n              year={result.Year}\n              poster={result.Poster}\n            />\n          ))}\n      </MovieList>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}